<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.board.dao.BoardMapper"> 
	 <!-- 글쓰기 -->
	 <insert id="insertBoard" parameterType="boardVO">
	 	INSERT INTO spboard(
	 		board_num,
	 		category,
	 		title,
	 		content,
	 		filename,
	 		ip,
	 		mem_num)
	 		VALUES(
	 		spboard_seq.nextval,
	 		#{category},
	 		#{title},
	 		#{content},
	 		#{filename,jdbcType=VARCHAR},
	 		#{ip},
	 		#{mem_num})
	 </insert>
	 <!-- sql 태그와 include 태그를 이용해서 SQL문을 재사용 -->
	 <sql id="boardSearch"> <!-- 검색할 떄 -->
	 	<where>
	 		<if test="category != null and category != ''"> <!-- 카테고리가 있을 때 where절과 카테고리값 생성 -->
	 			category = #{category}
	 		</if>
	 		<if test="keyword !=null and keyword !=''">
	 			And
	 		</if>
	 		<if test="keyfield ==1">
	 			title LIKE '%' || #{keyword} || '%'
	 		</if>
	 		<if test="keyfield ==2">
	 			(id LIKE '%' || #{keyword} || '%' OR
	 			nick_name LIKE '%' || #{keyword} || '%')
	 		</if>
	 		<if test="keyfield ==3">
	 			content LIKE '%' || #{keyword} || '%'
	 		</if>
	 		<if test="keyfield ==4">
	 			(title LIKE '%' || #{keyword} || '%' OR
	 			content LIKE '%' || #{keyword} || '%')
	 		</if>
	 	</where>
	 </sql>
	 <sql id="boardOrder"> <!-- 정렬할 때 -->
	 	<if test="order ==1">
	 		ORDER BY board_num DESC
	 	</if>
	 	<if test="order ==2">
	 		ORDER BY hit DESC
	 	</if>
	 	<if test="order ==3">
	 		ORDER BY fav_cnt DESC NULLS LAST
	 	</if>
	 	<if test="order ==4">
	 		ORDER BY re_cnt DESC NULLS LAST
	 	</if>
	 </sql>
	 
	 <!-- 게시판 글 총레코드 수/검색 레코드 수 -->
	 <select id="selectRowCount" parameterType="map" resultType="integer">
	 	SELECT
	 		COUNT(*)
	 	FROM spboard JOIN spmember USING (mem_num)
	 	<include refid="boardSearch"></include>
	 </select>
	 <!-- 게시판 전체 목록/검색 목록 -->
	 <select id="selectList" parameterType="map" resultType="boardVO">
	 
	 
	 	SELECT
	 		*
	 	FROM (SELECT
	 			a.*,
	 			rownum rnum
	 		  FROM (SELECT
	 		  		  board_num,
	 		  		  <![CDATA[
	 		  		  REPLACE(REPLACE(title,'<','&lt;'),'>','&gt;') title,
	 		  		  ]]>
	 		  		  hit,
	 		  		  filename,
	 		  		  reg_date,
	 		  		  mem_num,
	 		  		  id,
	 		  		  nick_name,
	 		  		  re_cnt,
	 		  		  fav_cnt
	 		  		FROM spboard 
	 		  		LEFT OUTER JOIN (SELECT COUNT (*) re_cnt, board_num FROM spboard_reply GROUP BY board_num) USING(board_num)
	 		  		LEFT OUTER JOIN (SELECT COUNT (*) fav_cnt, board_num FROM spboard_fav GROUP BY board_num) USING(board_num) <!-- fav_cnt는 알리아스 명칭임 이 괄호는 인라인 뷰 -->
	 		  		JOIN spmember USING(mem_num)
	 		  		<include refid="boardSearch"></include>
	 		  		<include refid="boardOrder"></include>
	 		  		)a) 
	<![CDATA[
	WHERE rnum >= #{start} AND rnum <= #{end}
	]]>
	</select>
	<!-- 게시판 글수정 -->
	<update id="updateBoard" parameterType="boardVO">
		UPDATE spboard SET
			<if test="filename != null">
			filename = #{filename},
			</if>
			title = #{title},
			content = #{content},
			ip = #{ip},
			modify_date = SYSDATE
		WHERE board_num = #{board_num}
	</update>
	
	<!-- 댓글 등록 -->
	<insert id="insertReply" parameterType="boardReplyVO">
		INSERT INTO spboard_reply(
			re_num,
			re_content,
			re_ip,
			board_num,
			mem_num)
		VALUES(
			spreply_seq.nextval,
			#{re_content},
			#{re_ip},
			#{board_num},
			#{mem_num})
	</insert>
	<!-- 댓글 목록 -->
	<select id="selectListReply" parameterType="map" resultType="boardReplyVO">
		SELECT
			*
		FROM (SELECT
				a.*,
				rownum rnum
			  FROM (SELECT
			  		  *
			  		FROM spboard_reply
			  		JOIN spmember USING(mem_num)
			  		/*로그인한 상태에서 클릭한 사람의 정보읽기, 로그인하지 않으면 0 전달*/
			  		LEFT OUTER JOIN (SELECT re_num, mem_num click_num <!-- 클릭한 사람의 num과 mem_num을 비교 -->
			  			FROM spreply_fav 
			  			WHERE mem_num=#{mem_num}) 
			  			USING(re_num) 
			  		LEFT OUTER JOIN (SELECT re_num, COUNT(*) refav_cnt 
			  						 FROM spreply_fav GROUP BY re_num)
			  						 USING(re_num)
			  		LEFT OUTER JOIN (SELECT re_num,COUNT(*) resp_cnt
			  						 FROM spboard_response GROUP BY re_num)
			  						 USING(re_num)
			  		WHERE board_num=#{board_num}
			  		ORDER BY re_num DESC)a)
		<![CDATA[
		WHERE rnum >=#{start} AND rnum <=#{end}
		]]>
	</select>
	<!-- 답글등록 -->
	<insert id="insertResponse" parameterType="boardResponseVO">
		INSERT INTO spboard_response(
			te_num,
			te_content,
			te_parent_num,
			te_depth,
			te_ip,
			re_num,
			mem_num)
		VALUES (
			response_seq.nextval,
			#{te_content},
			#{te_parent_num},
			#{te_depth},
			#{te_ip},
			#{re_num},
			#{mem_num})
		
	</insert>
 </mapper>







